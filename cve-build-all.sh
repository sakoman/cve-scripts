#! /bin/bash

set -e

TOPDIR=~/builds/cve
BUILDDIR=~/builds/cve/build
POKYDIR=~/builds/cve/poky
RESULTSDIR=~/builds/cve/cve-results
TIMESTAMP=`date +%c`

if [ -z "$1" ]; then
	BRANCH="master"
else
	BRANCH=$1
fi

if [ -z "$2" ]; then
	TO=openembedded-core@lists.openembedded.org,yocto-security@lists.yoctoproject.org
else
	TO=$2
fi

cd $POKYDIR
git checkout $BRANCH  > /dev/null
git pull > /dev/null

rm -rf $BUILDDIR
. $POKYDIR/oe-init-build-env $BUILDDIR > /dev/null

#echo DL_DIR ?= \"$TOPDIR/dl-sstate/downloads\" >> $BUILDDIR/conf/local.conf
#echo SSTATE_DIR ?= \"$TOPDIR/dl-sstate/sstate-cache\" >> $BUILDDIR/conf/local.conf
echo 'INHERIT += "cve-check"' >> $BUILDDIR/conf/auto.conf
echo 'LICENSE_FLAGS_ACCEPTED += "commercial"' >> $BUILDDIR/conf/auto.conf

if [ -e $POKYDIR/meta/conf/distro/include/cve-extra-exclusions.inc ]; then
	bitbake world -DD --runall cve_check -R conf/distro/include/cve-extra-exclusions.inc
else
	bitbake world --runall cve_check
fi

cd $RESULTSDIR
git restore cve-results
git fetch
git checkout $BRANCH
git reset --hard origin/$BRANCH
cp cve-results cve-results-previous

$TOPDIR/cve-report-all.py $BUILDDIR/tmp/deploy/cve > $RESULTSDIR/cve-results

printf "Branch: $BRANCH\n" > cve-results-email 

comm -13 <(sort cve-results-previous)  <(sort cve-results) | sed '$d' > cve-new
NEW=`cat cve-new | wc -l`
comm -23 <(sort cve-results-previous)  <(sort cve-results) | sed '$d' >> cve-removed
REMOVED=`cat  cve-removed | wc -l`

printf "\nNew this week: $NEW CVEs\n" >> cve-results-email 
cat cve-new >> cve-results-email

printf "\nRemoved this week: $REMOVED CVEs\n" >> cve-results-email 
cat cve-removed >> cve-results-email

printf "\nFull list:  " >> cve-results-email 
cat cve-results >> cve-results-email

$TOPDIR/cve-add-severity.py < cve-results-email > cve-results-email-severity

printf "For further information see: https://autobuilder.yocto.io/pub/non-release/patchmetrics/" >> cve-results-email-severity

mail -s "OE-core CVE metrics for $BRANCH on $TIMESTAMP" -a FROM:steve@sakoman.com -- $TO < cve-results-email-severity

rm cve-new cve-removed cve-results-previous cve-results-email cve-results-email-severity

git add cve-results
git commit -m "CVE results for $TIMESTAMP" cve-results
git push origin $BRANCH
